{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "3737450535737021540"
    }
  },
  "parameters": {
    "adminPassword": {
      "type": "secureString",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "ContosoVnet",
      "metadata": {
        "description": "Subnet 1 Name"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "jumpbox_deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "adminUsername": {
            "value": "student"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "17618527500889264187"
            }
          },
          "parameters": {
            "adminUsername": {
              "type": "string",
              "defaultValue": "student",
              "metadata": {
                "description": "Username for the Virtual Machine."
              }
            },
            "adminPassword": {
              "type": "secureString",
              "minLength": 12,
              "metadata": {
                "description": "Password for the Virtual Machine."
              }
            },
            "dnsLabelPrefix": {
              "type": "string",
              "defaultValue": "[toLower(format('{0}-{1}', parameters('vmName'), uniqueString(resourceGroup().id, parameters('vmName'))))]",
              "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
              }
            },
            "publicIpName": {
              "type": "string",
              "defaultValue": "myPublicIP",
              "metadata": {
                "description": "Name for the Public IP used to access the Virtual Machine."
              }
            },
            "publicIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Allocation method for the Public IP used to access the Virtual Machine."
              }
            },
            "publicIpSku": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard"
              ],
              "metadata": {
                "description": "SKU for the Public IP used to access the Virtual Machine."
              }
            },
            "OSsku": {
              "type": "string",
              "defaultValue": "win10-21h2-pro-g2",
              "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
              }
            },
            "OSoffer": {
              "type": "string",
              "defaultValue": "Windows-10",
              "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
              }
            },
            "OSpublisher": {
              "type": "string",
              "defaultValue": "MicrosoftWindowsDesktop",
              "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
              }
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_D2s_v5",
              "metadata": {
                "description": "Size of the virtual machine."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "vmName": {
              "type": "string",
              "defaultValue": "jump-vm",
              "metadata": {
                "description": "Name of the virtual machine."
              }
            },
            "vnetName": {
              "type": "string",
              "defaultValue": "ContosoVnet",
              "metadata": {
                "description": "VNet name"
              }
            },
            "vnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/16",
              "metadata": {
                "description": "Address prefix"
              }
            },
            "subnet1Prefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/24",
              "metadata": {
                "description": "Subnet 1 Prefix"
              }
            },
            "subnet1Name": {
              "type": "string",
              "defaultValue": "jumpSubnet",
              "metadata": {
                "description": "Subnet 1 Name"
              }
            }
          },
          "variables": {
            "storageAccountName": "[format('bootdiags{0}', uniqueString(resourceGroup().id))]",
            "nicName": "myVMNic",
            "addressPrefix": "[parameters('vnetAddressPrefix')]",
            "subnetName": "[parameters('subnet1Name')]",
            "subnetPrefix": "[parameters('subnet1Prefix')]",
            "networkSecurityGroupName": "default-NSG",
            "networkProfileName": "aci-networkProfile",
            "interfaceConfigName": "eth0",
            "interfaceIpConfig": "ipconfigprofile1"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "Storage"
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-02-01",
              "name": "[parameters('publicIpName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('publicIpSku')]"
              },
              "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
                "dnsSettings": {
                  "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[variables('networkSecurityGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "default-allow-4545",
                    "properties": {
                      "priority": 1000,
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRange": "4545",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-02-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('addressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('subnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-02-01",
              "name": "[variables('nicName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('subnetName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[parameters('OSpublisher')]",
                    "offer": "[parameters('OSoffer')]",
                    "sku": "[parameters('OSsku')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "StandardSSD_LRS"
                    }
                  },
                  "dataDisks": [
                    {
                      "diskSizeGB": 1023,
                      "lun": 0,
                      "createOption": "Empty"
                    }
                  ]
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "hostname": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))).dnsSettings.fqdn]"
            },
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "vnetAddressPrefix": {
              "type": "string",
              "value": "[variables('addressPrefix')]"
            },
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "subnetName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[0].name]"
            },
            "subnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[0].id]"
            },
            "subnetAddressPrefix": {
              "type": "string",
              "value": "[variables('subnetPrefix')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "qvera_subnet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'jumpbox_deployment')).outputs.vnetName.value]"
          },
          "containerName": {
            "value": "qie-container"
          },
          "cpuCores": {
            "value": 4
          },
          "memoryInGb": {
            "value": 8
          },
          "subnetName": {
            "value": "qveraSubnet"
          },
          "subnetPrefix": {
            "value": "10.0.1.0/24"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "13930995324656045925"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "vnetName": {
              "type": "string",
              "metadata": {
                "description": "Vnet Name"
              }
            },
            "containerGroupName": {
              "type": "string",
              "defaultValue": "contoso-qvera-containergroup",
              "metadata": {
                "description": "Container group name"
              }
            },
            "containerName": {
              "type": "string",
              "defaultValue": "qie-container",
              "metadata": {
                "description": "Container name"
              }
            },
            "image": {
              "type": "string",
              "defaultValue": "qvera/qie:5.0.50",
              "metadata": {
                "description": "Container image to deploy. Should be of the form accountName/imagename:tag for images stored in Docker Hub or a fully qualified URI for a private registry like the Azure Container Registry."
              }
            },
            "port": {
              "type": "int",
              "defaultValue": 80,
              "metadata": {
                "description": "Port to open on the container."
              }
            },
            "cpuCores": {
              "type": "int",
              "defaultValue": 4,
              "metadata": {
                "description": "The number of CPU cores to allocate to the container. Must be an integer."
              }
            },
            "memoryInGb": {
              "type": "int",
              "defaultValue": 16,
              "metadata": {
                "description": "The amount of memory to allocate to the container in gigabytes."
              }
            },
            "subnetPrefix": {
              "type": "string",
              "defaultValue": "10.0.1.0/24",
              "metadata": {
                "description": "Subnet Prefix"
              }
            },
            "subnetName": {
              "type": "string",
              "defaultValue": "qveraSubnet",
              "metadata": {
                "description": "Subnet Name"
              }
            }
          },
          "variables": {
            "networkProfileName": "[format('{0}-networkProfile', parameters('subnetName'))]",
            "interfaceConfigName": "[format('{0}-eth0', parameters('subnetName'))]",
            "interfaceIpConfig": "[format('{0}-ipconfigprofile1', parameters('subnetName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), parameters('subnetName'))]",
              "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]",
                "delegations": [
                  {
                    "name": "DelegationService",
                    "properties": {
                      "serviceName": "Microsoft.ContainerInstance/containerGroups"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkProfiles",
              "apiVersion": "2020-11-01",
              "name": "[variables('networkProfileName')]",
              "location": "[parameters('location')]",
              "properties": {
                "containerNetworkInterfaceConfigurations": [
                  {
                    "name": "[variables('interfaceConfigName')]",
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "[variables('interfaceIpConfig')]",
                          "properties": {
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
              ]
            },
            {
              "type": "Microsoft.ContainerInstance/containerGroups",
              "apiVersion": "2019-12-01",
              "name": "[parameters('containerGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "containers": [
                  {
                    "name": "[parameters('containerName')]",
                    "properties": {
                      "image": "[parameters('image')]",
                      "ports": [
                        {
                          "port": "[parameters('port')]",
                          "protocol": "TCP"
                        }
                      ],
                      "resources": {
                        "requests": {
                          "cpu": "[parameters('cpuCores')]",
                          "memoryInGB": "[parameters('memoryInGb')]"
                        }
                      }
                    }
                  }
                ],
                "volumes": [
                  {
                    "name": "myvolume",
                    "gitRepo": {
                      "repository": "https://github.com/StevenBorg/ahds_demo_config",
                      "directory": "."
                    }
                  }
                ],
                "osType": "Linux",
                "networkProfile": {
                  "id": "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]"
                },
                "restartPolicy": "Always"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
              ]
            }
          ],
          "outputs": {
            "subnetName": {
              "type": "string",
              "value": "[parameters('subnetName')]"
            },
            "subnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
            },
            "networkProfileName": {
              "type": "string",
              "value": "[variables('networkProfileName')]"
            },
            "networkProfileId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'jumpbox_deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "orthanc_subnet",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'jumpbox_deployment')).outputs.vnetName.value]"
          },
          "containerName": {
            "value": "orthanc-container"
          },
          "cpuCores": {
            "value": 2
          },
          "memoryInGb": {
            "value": 4
          },
          "subnetName": {
            "value": "orthancSubnet"
          },
          "subnetPrefix": {
            "value": "10.0.2.0/24"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "12975965334827202169"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "vnetName": {
              "type": "string",
              "metadata": {
                "description": "Vnet Name"
              }
            },
            "containerGroupName": {
              "type": "string",
              "defaultValue": "contoso-orthanc-containergroup",
              "metadata": {
                "description": "Container group name"
              }
            },
            "containerName": {
              "type": "string",
              "defaultValue": "orthanc-container",
              "metadata": {
                "description": "Container name"
              }
            },
            "image": {
              "type": "string",
              "defaultValue": "osimis/orthanc:22.6.1-full",
              "metadata": {
                "description": "Container image to deploy. Should be of the form accountName/imagename:tag for images stored in Docker Hub or a fully qualified URI for a private registry like the Azure Container Registry."
              }
            },
            "port": {
              "type": "int",
              "defaultValue": 80,
              "metadata": {
                "description": "Port to open on the container."
              }
            },
            "cpuCores": {
              "type": "int",
              "defaultValue": 2,
              "metadata": {
                "description": "The number of CPU cores to allocate to the container. Must be an integer."
              }
            },
            "memoryInGb": {
              "type": "int",
              "defaultValue": 8,
              "metadata": {
                "description": "The amount of memory to allocate to the container in gigabytes."
              }
            },
            "subnetPrefix": {
              "type": "string",
              "defaultValue": "10.0.2.0/24",
              "metadata": {
                "description": "Subnet Prefix"
              }
            },
            "subnetName": {
              "type": "string",
              "defaultValue": "orthancSubnet",
              "metadata": {
                "description": "Subnet Name"
              }
            }
          },
          "variables": {
            "networkProfileName": "[format('{0}-networkProfile', parameters('subnetName'))]",
            "interfaceConfigName": "[format('{0}-eth0', parameters('subnetName'))]",
            "interfaceIpConfig": "[format('{0}-ipconfigprofile1', parameters('subnetName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), parameters('subnetName'))]",
              "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]",
                "delegations": [
                  {
                    "name": "DelegationService",
                    "properties": {
                      "serviceName": "Microsoft.ContainerInstance/containerGroups"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkProfiles",
              "apiVersion": "2020-11-01",
              "name": "[variables('networkProfileName')]",
              "location": "[parameters('location')]",
              "properties": {
                "containerNetworkInterfaceConfigurations": [
                  {
                    "name": "[variables('interfaceConfigName')]",
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "[variables('interfaceIpConfig')]",
                          "properties": {
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
              ]
            },
            {
              "type": "Microsoft.ContainerInstance/containerGroups",
              "apiVersion": "2019-12-01",
              "name": "[parameters('containerGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "containers": [
                  {
                    "name": "[parameters('containerName')]",
                    "properties": {
                      "image": "[parameters('image')]",
                      "ports": [
                        {
                          "port": "[parameters('port')]",
                          "protocol": "TCP"
                        }
                      ],
                      "resources": {
                        "requests": {
                          "cpu": "[parameters('cpuCores')]",
                          "memoryInGB": "[parameters('memoryInGb')]"
                        }
                      }
                    }
                  }
                ],
                "volumes": [
                  {
                    "name": "myvolume",
                    "gitRepo": {
                      "repository": "https://github.com/StevenBorg/ahds_demo_config",
                      "directory": "."
                    }
                  }
                ],
                "osType": "Linux",
                "networkProfile": {
                  "id": "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]"
                },
                "restartPolicy": "Always"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
              ]
            }
          ],
          "outputs": {
            "subnetName": {
              "type": "string",
              "value": "[parameters('subnetName')]"
            },
            "subnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
            },
            "networkProfileName": {
              "type": "string",
              "value": "[variables('networkProfileName')]"
            },
            "networkProfileId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkProfiles', variables('networkProfileName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'jumpbox_deployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'qvera_subnet')]"
      ]
    }
  ]
}